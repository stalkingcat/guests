{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/todo-view/todo-view.component.ts","./src/app/todo-view/todo-view.component.html","./src/app/todo-edit/todo-edit.component.ts","./src/app/todo-edit/todo-edit.component.html","./src/app/app-routing.module.ts","./src/app/todo.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { MsalService } from '@azure/msal-angular';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(private authService: MsalService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.authService.handleRedirectObservable().subscribe({\r\n      next: (result) => console.log(result),\r\n      error: (error) => console.log(error)\r\n    });\r\n  }\r\n\r\n}\r\n","<mat-card class='card-section'>\r\n    <mat-card-title>Sign-in with Azure AD</mat-card-title>\r\n    <mat-card-subtitle>Getting an access token with Azure AD and calling a web API</mat-card-subtitle>\r\n    <mat-card-content>This sample demonstrates how to use the Microsoft Authentication Library for Angular (MSAL Angular) to get an access token and call a web API secured by Azure AD.</mat-card-content>\r\n    <mat-card-actions>\r\n      <button mat-raised-button [routerLink]=\"['todo-view']\">Get My Tasks</button>\r\n    </mat-card-actions>\r\n    <mat-card-content></mat-card-content>\r\n</mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit, Inject, OnDestroy } from '@angular/core';\r\nimport { MsalService, MsalBroadcastService, MSAL_GUARD_CONFIG, MsalGuardConfiguration } from '@azure/msal-angular';\r\nimport { EventMessage, EventType, InteractionType, PopupRequest, RedirectRequest } from '@azure/msal-browser';\r\nimport { Subject } from 'rxjs';\r\nimport { filter, takeUntil } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  title = 'Microsoft identity platform';\r\n  isIframe = false;\r\n  loggedIn = false;\r\n  username = '';\r\n  private readonly _destroying$ = new Subject<void>();\r\n\r\n  constructor(\r\n    @Inject(MSAL_GUARD_CONFIG) private msalGuardConfig: MsalGuardConfiguration,\r\n    private authService: MsalService,\r\n    private msalBroadcastService: MsalBroadcastService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isIframe = window !== window.parent && !window.opener;\r\n\r\n    this.checkAccount();\r\n\r\n    /**\r\n     * You can subscribe to MSAL events as shown below. For more info,\r\n     * visit: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-angular/docs/v2-docs/events.md\r\n     */\r\n    this.msalBroadcastService.msalSubject$\r\n      .pipe(\r\n        filter((msg: EventMessage) => msg.eventType === EventType.LOGIN_SUCCESS || msg.eventType === EventType.ACQUIRE_TOKEN_SUCCESS),\r\n        takeUntil(this._destroying$)\r\n      )\r\n      .subscribe((result) => {\r\n        this.checkAccount();\r\n      });\r\n  }\r\n\r\n  checkAccount() {\r\n    this.loggedIn = this.authService.instance.getAllAccounts().length > 0;\r\n    if (this.loggedIn) {\r\n      this.username = this.authService.instance.getAllAccounts()[0].username;\r\n    }\r\n  }\r\n\r\n  login() {\r\n    if (this.msalGuardConfig.interactionType === InteractionType.Popup) {\r\n      if (this.msalGuardConfig.authRequest){\r\n        this.authService.loginPopup({...this.msalGuardConfig.authRequest} as PopupRequest)\r\n          .subscribe(() => this.checkAccount());\r\n        } else {\r\n          this.authService.loginPopup()\r\n            .subscribe(() => this.checkAccount());\r\n      }\r\n    } else {\r\n      if (this.msalGuardConfig.authRequest){\r\n        this.authService.loginRedirect({...this.msalGuardConfig.authRequest} as RedirectRequest);\r\n      } else {\r\n        this.authService.loginRedirect();\r\n      }\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  // unsubscribe to events when component is destroyed\r\n  ngOnDestroy(): void {\r\n    this._destroying$.next(undefined);\r\n    this._destroying$.complete();\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\">\r\n  <a class=\"title\" [routerLink]=\"['/']\">{{ title }}</a>\r\n\r\n  <div class=\"toolbar-spacer\"></div>\r\n  <button mat-raised-button *ngIf=\"!loggedIn\" (click)=\"login()\">Login</button>\r\n  <h4 class=\"username\" *ngIf=\"loggedIn\">Hello {{username}}!  </h4>\r\n  <button mat-raised-button *ngIf=\"loggedIn\" color=\"warn\" (click)=\"logout()\">Logout</button>\r\n</mat-toolbar>\r\n\r\n<div class=\"container\">\r\n  <!--This is to avoid reload during acquireTokenSilent() because of hidden iframe -->\r\n  <router-outlet *ngIf=\"!isIframe\"></router-outlet>\r\n</div>\r\n\r\n<footer *ngIf=\"loggedIn\">\r\n  <mat-toolbar>\r\n    <div class=\"footer-text\">\r\n      \r\n    </div>\r\n  </mat-toolbar>\r\n</footer>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatIconModule } from '@angular/material/icon'\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\n\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { IPublicClientApplication, PublicClientApplication, InteractionType, BrowserCacheLocation } from '@azure/msal-browser';\r\nimport { MsalGuard, MsalInterceptor, MsalBroadcastService, MsalInterceptorConfiguration, MsalModule, MsalService, MSAL_GUARD_CONFIG, MSAL_INSTANCE, MSAL_INTERCEPTOR_CONFIG, MsalGuardConfiguration } from '@azure/msal-angular';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { TodoService } from './todo.service';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { TodoEditComponent } from './todo-edit/todo-edit.component';\r\nimport { TodoViewComponent } from './todo-view/todo-view.component';\r\n\r\nimport * as auth from './auth-config.json';\r\n\r\nconst isIE = window.navigator.userAgent.indexOf(\"MSIE \") > -1 || window.navigator.userAgent.indexOf(\"Trident/\") > -1;\r\n\r\n\r\n/**\r\n * Here we pass the configuration parameters to create an MSAL instance.\r\n * For more info, visit: https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-angular/docs/v2-docs/configuration.md\r\n */\r\nexport function MSALInstanceFactory(): IPublicClientApplication {\r\n  return new PublicClientApplication({\r\n    auth: {\r\n      clientId: auth.credentials.clientId,\r\n      authority: 'https://login.microsoftonline.com/' + auth.credentials.tenantId,\r\n      redirectUri: auth.configuration.redirectUri\r\n    },\r\n    cache: {\r\n      cacheLocation: BrowserCacheLocation.LocalStorage,\r\n      storeAuthStateInCookie: isIE, // set to true for IE 11\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * MSAL Angular will automatically retrieve tokens for resources \r\n * added to protectedResourceMap. For more info, visit: \r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-angular/docs/v2-docs/initialization.md#get-tokens-for-web-api-calls\r\n */\r\nexport function MSALInterceptorConfigFactory(): MsalInterceptorConfiguration {\r\n  const protectedResourceMap = new Map<string, Array<string>>();\r\n  protectedResourceMap.set(auth.resources.todoListApi.resourceUri, auth.resources.todoListApi.resourceScopes);\r\n\r\n  return {\r\n    interactionType: InteractionType.Redirect,\r\n    protectedResourceMap\r\n  };\r\n}\r\n\r\n/**\r\n * Set your default interaction type for MSALGuard here. If you have any\r\n * additional scopes you want the user to consent upon login, add them here as well.\r\n */\r\nexport function MSALGuardConfigFactory(): MsalGuardConfiguration {\r\n  return { interactionType: InteractionType.Redirect };\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    TodoViewComponent,\r\n    TodoEditComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatToolbarModule,\r\n    HttpClientModule,\r\n    MsalModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatCheckboxModule,\r\n    MatIconModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: MsalInterceptor,\r\n      multi: true\r\n    },\r\n    {\r\n      provide: MSAL_INSTANCE,\r\n      useFactory: MSALInstanceFactory\r\n    },\r\n    {\r\n      provide: MSAL_GUARD_CONFIG,\r\n      useFactory: MSALGuardConfigFactory\r\n    },\r\n    {\r\n      provide: MSAL_INTERCEPTOR_CONFIG,\r\n      useFactory: MSALInterceptorConfigFactory\r\n    },\r\n    MsalService,\r\n    MsalGuard,\r\n    MsalBroadcastService,\r\n    TodoService,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\n\r\nimport { TodoService } from './../todo.service';\r\nimport { Todo } from '../todo';\r\n\r\n@Component({\r\n  selector: 'app-todo-view',\r\n  templateUrl: './todo-view.component.html',\r\n  styleUrls: ['./todo-view.component.css']\r\n})\r\nexport class TodoViewComponent implements OnInit {\r\n  \r\n  todo?: Todo;\r\n\r\n  todos: Todo[] = [];\r\n\r\n  displayedColumns = ['status', 'description', 'owner', 'edit', 'remove'];\r\n\r\n  constructor(private service: TodoService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getTodos();\r\n  }\r\n\r\n  getTodos(): void {\r\n    this.service.getTodos()\r\n      .subscribe((todos: Todo[]) => {\r\n        this.todos = todos;\r\n      });\r\n  }\r\n\r\n  addTodo(add: NgForm): void {\r\n    this.service.postTodo(add.value).subscribe(() => {\r\n      this.getTodos();\r\n    })\r\n    add.resetForm();\r\n  }\r\n\r\n  checkTodo(todo: Todo): void {\r\n    this.service.editTodo(todo).subscribe();\r\n  }\r\n\r\n  removeTodo(id: string): void {\r\n    this.service.deleteTodo(+id).subscribe(() => {\r\n      this.getTodos();\r\n    })\r\n  }\r\n\r\n}\r\n","<mat-card class='card-section'>\r\n    <form #add=\"ngForm\" (ngSubmit)=\"addTodo(add)\" >\r\n        <mat-form-field appearance=\"fill\" class=\"form-field\">\r\n            <mat-label>Enter a task</mat-label>\r\n            <input matInput type=\"text\" name=\"description\" placeholder=\"task\" class=\"input-field\" [(ngModel)]=\"todo\">\r\n        </mat-form-field>\r\n        <button mat-raised-button id=\"submit-button\" color=\"primary\" type=\"submit\" value=\"submit\">Add</button>\r\n    </form>\r\n</mat-card>\r\n<br>\r\n\r\n<br>\r\n<div class=\"mat-elevation-z8\">\r\n\t<table mat-table [dataSource]=\"todos\">\r\n\r\n\t\t<ng-container matColumnDef=\"status\">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef> Status </th>\r\n\t\t\t<td mat-cell *matCellDef=\"let todo\"><mat-checkbox [(ngModel)]=\"todo.status\" (change)=\"checkTodo(todo)\"></mat-checkbox></td>\r\n\t\t</ng-container>\r\n\r\n\t\t<ng-container matColumnDef=\"description\">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef> Description </th>\r\n\t\t\t<td mat-cell *matCellDef=\"let todo\"> {{todo.description}} </td>\r\n\t\t</ng-container>\r\n\r\n\t\t<ng-container matColumnDef=\"owner\">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef> Owner </th>\r\n\t\t\t<td mat-cell *matCellDef=\"let todo\"> {{todo.owner}} </td>\r\n\t\t</ng-container>\r\n\r\n\t\t<ng-container matColumnDef=\"edit\">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef> Edit </th>\r\n\t\t\t<td mat-cell *matCellDef=\"let todo\"><mat-icon class=\"material-icons\" [routerLink]=\"['/todo-edit', todo.id]\">edit</mat-icon></td>\r\n\t\t</ng-container>\r\n\r\n\t\t<ng-container matColumnDef=\"remove\">\r\n\t\t\t<th mat-header-cell *matHeaderCellDef> Remove </th>\r\n\t\t\t<td mat-cell *matCellDef=\"let todo\"><mat-icon class=\"material-icons\" (click)=\"removeTodo(todo.id)\">delete</mat-icon></td>\r\n\t\t</ng-container>\r\n\r\n\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\t</table>\r\n</div>\r\n","import { TodoService } from './../todo.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Todo } from '../todo';\r\n\r\n@Component({\r\n  selector: 'app-todo-edit',\r\n  templateUrl: './todo-edit.component.html',\r\n  styleUrls: ['./todo-edit.component.css']\r\n})\r\nexport class TodoEditComponent implements OnInit {\r\n\r\n  todo: Todo = {\r\n    id: 1,\r\n    description: \"\",\r\n    status: false,\r\n  };\r\n\r\n  constructor(private route: ActivatedRoute, private router: Router, private service: TodoService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.route.paramMap.subscribe((params) => {\r\n      let id = +params.get('id')!;\r\n      this.service.getTodo(+id).subscribe((response: Todo) => {\r\n        this.todo = response;\r\n      })\r\n    })\r\n  }\r\n\r\n  editTodo(todo: Todo): void {\r\n    this.todo.description = todo.description;\r\n    this.service.editTodo(this.todo).subscribe(() => {\r\n      this.router.navigate(['/todo-view']);\r\n    })\r\n  }\r\n\r\n}\r\n","<mat-card class='card-section'>\r\n    <div>\r\n        <h1>Edit a task</h1>\r\n        <hr>\r\n        <br>\r\n    </div>\r\n    <form #edit=\"ngForm\" (ngSubmit)=\"editTodo(edit.value)\">\r\n        <mat-form-field appearance=\"fill\" class=\"form-field\">\r\n                <input matInput type=\"text\" name=\"description\" placeholder=\"task\" class=\"input-field\" [(ngModel)]=\"todo.description\">\r\n        </mat-form-field>\r\n        <button mat-raised-button color=\"primary\" type=\"submit\" value=\"submit\" class=\"submit-button\">Edit</button>\r\n    </form>\r\n</mat-card>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MsalGuard } from '@azure/msal-angular';\r\n\r\nimport { HomeComponent } from './home/home.component';\r\nimport { TodoViewComponent } from './todo-view/todo-view.component';\r\nimport { TodoEditComponent } from './todo-edit/todo-edit.component';\r\n\r\n/**\r\n * MSAL Angular can protect routes in your application\r\n * using MsalGuard. For more info, visit:\r\n * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-angular/docs/v2-docs/initialization.md#secure-the-routes-in-your-application\r\n */\r\nconst routes: Routes = [\r\n  {\r\n    path: 'todo-edit/:id',\r\n    component: TodoEditComponent,\r\n    canActivate: [\r\n      MsalGuard\r\n    ]\r\n  },\r\n  {\r\n    path: 'todo-view',\r\n    component: TodoViewComponent,\r\n    canActivate: [\r\n      MsalGuard\r\n    ]\r\n  },\r\n  {\r\n    // Needed for hash routing\r\n    path: 'state',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    // Needed for hash routing\r\n    path: 'code',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  }\r\n];\r\n\r\nconst isIframe = window !== window.parent && !window.opener;\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    useHash: true,\r\n    // Don't perform initial navigation in iframes\r\n    initialNavigation: !isIframe ? 'enabled' : 'disabled'\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Todo } from './todo';\r\nimport * as auth from './auth-config.json';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TodoService {\r\n  url = auth.resources.todoListApi.resourceUri;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getTodos() { \r\n    return this.http.get<Todo[]>(this.url);\r\n  }\r\n\r\n  getTodo(id: number) { \r\n    return this.http.get<Todo>(this.url + '/' +  id);\r\n  }\r\n  \r\n  postTodo(todo: Todo) { \r\n    return this.http.post<Todo>(this.url, todo);\r\n  }\r\n\r\n  deleteTodo(id: number) {\r\n    return this.http.delete(this.url + '/' + id);\r\n  }\r\n\r\n  editTodo(todo: Todo) { \r\n    return this.http.put<Todo>(this.url + '/' + todo.id, todo);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}